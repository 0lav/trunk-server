[{"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/ListCalls.js":"1","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/call-actions.js":"2","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/System/ListSystemsContainer.js":"3","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/CallPlayer.js":"4","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Group/group-constants.js":"5","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/SupportModal.js":"6","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/FilterModal.js":"7","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/query-string.js":"8","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/CalendarModal.js":"9","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/redux-router/configureStore.js":"10","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Talkgroups/talkgroup-actions.js":"11","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Group/group-reducer.js":"12","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/MediaPlayer.js":"13","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/GroupModal.js":"14","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Group/group-actions.js":"15","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/redux-router/reducers.js":"16","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/System/SystemCard.js":"17","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/CalendarModalContainer.js":"18","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/System/ListSystems.js":"19","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Talkgroups/talkgroup-constants.js":"20","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/CallItem.js":"21","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/System/system-actions.js":"22","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Talkgroups/talkgroup-reducer.js":"23","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Main/MainContainer.js":"24","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/call-reducer.js":"25","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/call-constants.js":"26","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/index.js":"27"},{"size":1638,"mtime":1613617344583,"results":"28","hashOfConfig":"29"},{"size":9120,"mtime":1613445049756,"results":"30","hashOfConfig":"29"},{"size":277,"mtime":1545362103911,"results":"31","hashOfConfig":"29"},{"size":19377,"mtime":1613615960319,"results":"32","hashOfConfig":"29"},{"size":151,"mtime":1545362103908,"results":"33","hashOfConfig":"29"},{"size":1313,"mtime":1610678127937,"results":"34","hashOfConfig":"29"},{"size":4455,"mtime":1613445049753,"results":"35","hashOfConfig":"29"},{"size":362,"mtime":1610678313030,"results":"36","hashOfConfig":"29"},{"size":1778,"mtime":1609597248589,"results":"37","hashOfConfig":"29"},{"size":854,"mtime":1611803272298,"results":"38","hashOfConfig":"29"},{"size":2433,"mtime":1609597717050,"results":"39","hashOfConfig":"29"},{"size":1395,"mtime":1545362103908,"results":"40","hashOfConfig":"29"},{"size":4313,"mtime":1613615882987,"results":"41","hashOfConfig":"29"},{"size":2023,"mtime":1612233431556,"results":"42","hashOfConfig":"29"},{"size":1747,"mtime":1609597708479,"results":"43","hashOfConfig":"29"},{"size":595,"mtime":1609596047661,"results":"44","hashOfConfig":"29"},{"size":2045,"mtime":1609520570000,"results":"45","hashOfConfig":"29"},{"size":763,"mtime":1545362103896,"results":"46","hashOfConfig":"29"},{"size":1547,"mtime":1609520315634,"results":"47","hashOfConfig":"29"},{"size":537,"mtime":1545362103916,"results":"48","hashOfConfig":"29"},{"size":2982,"mtime":1613617462684,"results":"49","hashOfConfig":"29"},{"size":1575,"mtime":1610678224214,"results":"50","hashOfConfig":"29"},{"size":1045,"mtime":1610678295131,"results":"51","hashOfConfig":"29"},{"size":264,"mtime":1545362103910,"results":"52","hashOfConfig":"29"},{"size":7019,"mtime":1560857753468,"results":"53","hashOfConfig":"29"},{"size":1109,"mtime":1560828045933,"results":"54","hashOfConfig":"29"},{"size":1221,"mtime":1613445049764,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1du4mf8",{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/ListCalls.js",["120"],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/call-actions.js",["121","122"],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/System/ListSystemsContainer.js",[],["123","124"],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/CallPlayer.js",["125","126"],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Group/group-constants.js",[],["127","128"],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/SupportModal.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/FilterModal.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/query-string.js",["129"],"export default {\n  parse: function parse(queryString) {\n    var query = {};\n    var pairs = (queryString[0] === '?' ? queryString.substr(1) : queryString).split('&');\n    for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split('=');\n        query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');\n    }\n    return query;\n  }\n}\n",["130","131"],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/CalendarModal.js",["132"],"import React, { Component } from \"react\";\nimport {\n  Modal,\n  Button,\n  Icon,\n  Header\n} from \"semantic-ui-react\";\nimport \"./CalendarModal.css\";\nimport DatePicker from 'react-datepicker';\nimport {  subDays } from 'date-fns'\nimport 'react-datepicker/dist/react-datepicker.css';\n\nclass CalendarModal extends Component {\n  constructor(props) {\n    super(props)\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleDone = this.handleDone.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n\n    this.state = {\n      open: false,\n      startDate: new Date()\n    }\n}\n\nhandleDateChange = (date) => {\n    this.setState({\n      startDate: date\n    });\n  }\n\nhandleClose = () => this.props.onClose(false);\nhandleDone(event) {\n  this.props.callActions.setDateFilter(this.state.startDate.getTime());\n  this.props.onClose(true);\n}\n\n\n  render() {\n    \n    return (\n\n      <Modal open={this.props.open} onClose={this.handleClose} centered={false} size=\"tiny\">\n        <Modal.Header>Select a Date & Time</Modal.Header>\n        <Modal.Content >\n          <Modal.Description>\n            <DatePicker\n                selected={this.state.startDate}\n                onChange={this.handleDateChange}\n                maxDate={new Date()}\n                minDate={subDays(new Date(), process.env.REACT_APP_ARCHIVE_DAYS)}\n                showTimeSelect\n                timeFormat=\"HH:mm\"\n                timeIntervals={15}\n                dateFormat=\"LLL\"\n                inline\n            />\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button onClick={this.handleDone} >\n            <Icon name='checkmark' /> Done\n          </Button>\n        </Modal.Actions>\n      </Modal>\n\n    )\n  }\n}\n\nexport default CalendarModal;\n","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/redux-router/configureStore.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Talkgroups/talkgroup-actions.js",["133","134","135","136","137","138","139"],"import axios from 'axios';\n//import { browserHistory } from \"react-router\"\nimport * as types from \"./talkgroup-constants\";\nimport { push } from 'connected-react-router';\n\n// \"Log In\" action creators\nfunction beginImportTalkgroup() {\n  return { type: types.IMPORT_TALKGROUP };\n}\n\nfunction importTalkgroupSuccess(data) {\n  return {\n    type: types.IMPORT_SUCCESS_TALKGROUP,\n    data\n  };\n}\n\nfunction importTalkgroupError(data) {\n  return {\n    type: types.IMPORT_ERROR_TALKGROUP,\n    data\n  };\n}\n\nfunction beginExportTalkgroup() {\n  return { type: types.EXPORT_TALKGROUP };\n}\n\nfunction exportTalkgroupSuccess() {\n  return { type: types.EXPORT_SUCCESS_TALKGROUP };\n}\n\nfunction exportTalkgroupError() {\n  return { type: types.EXPORT_ERROR_TALKGROUP };\n}\n\n\nfunction beginFetchTalkgroup() {\n  return { type: types.FETCH_TALKGROUP };\n}\n\nfunction fetchTalkgroupSuccess(data) {\n  return { type: types.FETCH_SUCCESS_TALKGROUP,\n  data };\n}\n\nfunction fetchTalkgroupError(data) {\n  return { type: types.FETCH_ERROR_TALKGROUP,\n  data };\n}\n\n\nfunction makeUserRequest(method, data, api) {\n  // returns a Promise\n  return axios({\n    method: method,\n    url: api,\n    data: data\n  });\n}\n\nexport function changeUrl(url) {\n  return dispatch => {\n    dispatch(push(url));\n  };\n}\n\n\n// https://stackoverflow.com/questions/41878838/how-do-i-set-multipart-in-axios-with-react\n\n\n\nfunction shouldFetchTalkgroups(state, shortName) {\n  if (!state.talkgroup.items.hasOwnProperty(shortName)) {\n    return true\n  } else if (state.talkgroup.isWaiting) {\n    return false\n  } else {\n    return false\n  }\n}\n\nexport function fetchTalkgroups(shortName) {\n  return (dispatch, getState) => {\n    if (shouldFetchTalkgroups(getState(), shortName)) {\n    dispatch(beginFetchTalkgroup());\n\n    return axios\n      .get(process.env.REACT_APP_BACKEND_SERVER + \"/\" + shortName + \"/talkgroups\")\n      .then(response => {\n        if (response.data) {\n          var data = {shortName: shortName, talkgroups: response.data.talkgroups}\n          dispatch(fetchTalkgroupSuccess( data));\n        } else {\n          dispatch(fetchTalkgroupError());\n          let registerMessage = response.data.message;\n          return registerMessage;\n        }\n      })\n      .catch(response => {\n        if (response instanceof Error) {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", response.message);\n        }\n      });\n  };\n};\n}\n",["140","141"],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Group/group-reducer.js",["142","143"],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/MediaPlayer.js",["144","145"],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/GroupModal.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Group/group-actions.js",[],["146","147"],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/redux-router/reducers.js",[],["148","149"],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/System/SystemCard.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/CalendarModalContainer.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/System/ListSystems.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Talkgroups/talkgroup-constants.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/CallItem.js",["150"],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/System/system-actions.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Talkgroups/talkgroup-reducer.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Main/MainContainer.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/call-reducer.js",["151","152"],"import {\n  FETCH_CALL_INFO,\n  FETCH_SUCCESS_CALL_INFO,\n  FETCH_ERROR_CALL_INFO,\n  FETCH_CALL,\n  PREPEND_CALL,\n  UPSERT_CALL,\n  FETCH_SUCCESS_CALL,\n  FETCH_SUCCESS_OLDER_CALL,\n  FETCH_SUCCESS_NEWER_CALL,\n  FETCH_ERROR_CALL,\n  SET_SHORT_NAME,\n  SET_ALL_FILTER,\n  SET_GROUP_FILTER,\n  SET_TALKGROUP_FILTER,\n  SET_DATE_FILTER,\n  SET_STARRED_FILTER,\n  SET_FILTER,\n  SET_CURRENT_CALL_ID,\n  SET_LIVE,\n  ADD_STAR_SUCCESS\n} from \"./call-constants\";\n\nfunction updateObject(oldObject, newValues) {\n    // Encapsulate the idea of passing a new object as the first parameter\n    // to Object.assign to ensure we correctly copy data instead of mutating\n    return Object.assign({}, oldObject, newValues);\n}\n\nfunction updateCallInItems(calls, action) {\nreturn  calls.map( (item) => {\n        if (item._id !== action.data._id) {\n            // This isn't the item we care about - keep it as-is\n            return item;\n        }\n\n        // Otherwise, this is the one we want - return an updated value\n        return {\n            ...action.data\n        };\n    });\n}\n/*\nfunction updateObjectInArray(array, action) {\n  return array.map((item, index) => {\n    if (index !== action.index) {\n      // This isn't the item we care about - keep it as-is\n      return item\n    }\n\n    // Otherwise, this is the one we want - return an updated value\n    return {\n      ...item,\n      ...action.item\n    }\n  })\n}\n\nfunction updateObjectInArray(array, shortName, updatedItem) {\n    return array.map( item => {\n        if(item.shortName !== shortName) {\n            // This isn't the item we care about - keep it as-is\n            return item;\n        }\n\n        // Otherwise, this is the one we want - return an updated value\n        return {\n            ...item,\n            ...updatedItem\n        };\n    });\n}\n*/\nconst now = new Date();\nconst call = (\n  state = {\n    isWaiting: false,\n    shortName: \"\",\n    byId: {},\n    allIds: [],\n    oldestCallTime: now,\n    newestCallTime: now,\n    filterType: 0,\n    filterTalkgroups: [],\n    filterGroupId: false,\n    filterDate: false,\n    filterStarred: false,\n    currentCallId: false,\n    live: false\n  },\n  action\n) => {\n  switch (action.type) {\n\n    case SET_CURRENT_CALL_ID:\n      return Object.assign({}, state, {currentCallId: action.data});\n      \n    case SET_FILTER:\n    {\n      var filter={};\n      filter.live = !action.data.live ? state.live : action.data.live;\n      filter.filterStarred = !action.data.filterStarred ? false : action.data.filterStarred;\n      filter.filterType = !action.data.filterType ? 0 : action.data.filterType;\n      filter.filterTalkgroups = !action.data.filterTalkgroups ? [] : action.data.filterTalkgroups;\n      filter.filterGroupId = !action.data.filterGroupId ? false : action.data.filterGroupId;\n      filter.filterDate = !action.data.filterDate ? 0 : action.data.filterDate;\n      return Object.assign({}, state, {\n        live: action.data.live,\n        filterType: action.data.filterType,\n        filterTalkgroups: action.data.filterTalkgroups,\n        filterGroupId: action.data.filterGroupId,\n        filterDate: action.data.filterDate,\n        filterStarred: action.data.filterStarred\n      });\n    }\n\n    case SET_LIVE:\n      return Object.assign({}, state, {live: action.data});\n    \n    case SET_SHORT_NAME:\n      return Object.assign({}, state, {shortName: action.data});\n\n    case SET_DATE_FILTER:\n      return Object.assign({}, state, {filterDate: action.date});\n\n    case SET_STARRED_FILTER:\n        return Object.assign({}, state, {filterStarred: action.data});\n\n    case SET_ALL_FILTER:\n      return Object.assign({}, state, {filterType: 0, filterTalkgroups:[], filterGroupId: false});\n\n    case SET_GROUP_FILTER:\n      return Object.assign({}, state, {filterType: 1, filterTalkgroups:[], filterGroupId: action.groupId});\n\n    case SET_TALKGROUP_FILTER:\n      return Object.assign({}, state, {filterType: 2, filterTalkgroups: action.talkgroups, filterGroupId: false});\n\n    case FETCH_CALL_INFO:\n    case FETCH_CALL:\n      return Object.assign({}, state, { isWaiting: true});\n\n    case FETCH_SUCCESS_CALL_INFO:\n      return Object.assign({}, state, {\n        byId:  {...state.byId, [action.data._id]: action.data },\n        isWaiting: false\n\n      });\n\n    case ADD_STAR_SUCCESS:\n      return Object.assign({}, state,{\n        byId:  {...state.byId, [action.data._id]: action.data },\n        isWaiting: false\n\n      });\n  // This will set the items to the rx data\n  case FETCH_SUCCESS_CALL:\n  {\n      const byId = action.data.calls.reduce((acc, call) => ({ ...acc, [call._id]: call }), {});\n      const allIds =  action.data.calls.map(call => call._id);\n      return Object.assign({}, state, {\n          isWaiting: false,\n          shortName: action.data.shortName,\n          newestCallTime: new Date(action.data.calls[0].time),\n          oldestCallTime: new Date(action.data.calls[action.data.calls.length-1].time),\n          byId:  { ...byId},\n          allIds: [...allIds]\n        });\n    }\n\n  case UPSERT_CALL:\n    if (typeof state.byId[action.data._id] !== \"undefined\") {\n      return Object.assign({}, state, {\n        byId:  {...state.byId, [action.data._id]: action.data },\n      });\n    } else {\n      return Object.assign({}, state, {\n        newestCallTime: new Date(action.data.time),\n        byId:  {[action.data._id]: action.data, ...state.byId},\n        allIds: [action.data._id, ...state.allIds]\n      }); \n    }\n\n  case PREPEND_CALL:\n  return Object.assign({}, state, {\n      isWaiting: false,\n      newestCallTime: new Date(action.data.time),\n      byId:  {[action.data._id]: action.data, ...state.byId},\n      allIds: [action.data._id, ...state.allIds]\n    });\n\n// This will add the array of Calls in the data to the beginning of the existing array of Calls\n    case FETCH_SUCCESS_NEWER_CALL:\n    const byId = action.data.calls.reduce((acc, call) => ({ ...acc, [call._id]: call }), {});\n    const allIds =  action.data.calls.map(call => call._id).reverse();\n    return Object.assign({}, state, {\n        isWaiting: false,\n        shortName: action.data.shortName,\n        newestCallTime: new Date(action.data.calls[action.data.calls.length-1].time),\n        byId:  {...state.byId, ...byId},\n        allIds: [...allIds, ...state.allIds]\n      });\n\n// This will add the array of Calls in the data to the end of the existing array of Calls\n    case FETCH_SUCCESS_OLDER_CALL:\n    {\n    const byId = action.data.calls.reduce((acc, call) => ({ ...acc, [call._id]: call }), {});\n    const allIds =  action.data.calls.map(call => call._id);\n    return Object.assign({}, state, {\n        isWaiting: false,\n        shortName: action.data.shortName,\n        oldestCallTime: new Date(action.data.calls[action.data.calls.length-1].time),\n        byId:  {...state.byId, ...byId},\n        allIds: [ ...state.allIds, ...allIds]\n      });\n    }\n    case FETCH_ERROR_CALL_INFO:\n    case FETCH_ERROR_CALL:\n      return Object.assign({}, state, {\n        isWaiting: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default call;\n","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/call-constants.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/index.js",[],{"ruleId":"153","severity":1,"message":"154","line":12,"column":3,"nodeType":"155","messageId":"156","endLine":16,"endColumn":4},{"ruleId":"157","severity":1,"message":"158","line":20,"column":10,"nodeType":"159","messageId":"160","endLine":20,"endColumn":21},{"ruleId":"161","severity":1,"message":"162","line":74,"column":3,"nodeType":"163","messageId":"164","endLine":80,"endColumn":4},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"157","severity":1,"message":"169","line":288,"column":15,"nodeType":"159","messageId":"160","endLine":288,"endColumn":19},{"ruleId":"157","severity":1,"message":"170","line":340,"column":13,"nodeType":"159","messageId":"160","endLine":340,"endColumn":24},{"ruleId":"165","replacedBy":"171"},{"ruleId":"167","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":1,"column":1,"nodeType":"175","endLine":11,"endColumn":2},{"ruleId":"165","replacedBy":"176"},{"ruleId":"167","replacedBy":"177"},{"ruleId":"157","severity":1,"message":"178","line":6,"column":3,"nodeType":"159","messageId":"160","endLine":6,"endColumn":9},{"ruleId":"157","severity":1,"message":"179","line":7,"column":10,"nodeType":"159","messageId":"160","endLine":7,"endColumn":30},{"ruleId":"157","severity":1,"message":"180","line":11,"column":10,"nodeType":"159","messageId":"160","endLine":11,"endColumn":32},{"ruleId":"157","severity":1,"message":"181","line":18,"column":10,"nodeType":"159","messageId":"160","endLine":18,"endColumn":30},{"ruleId":"157","severity":1,"message":"182","line":25,"column":10,"nodeType":"159","messageId":"160","endLine":25,"endColumn":30},{"ruleId":"157","severity":1,"message":"183","line":29,"column":10,"nodeType":"159","messageId":"160","endLine":29,"endColumn":32},{"ruleId":"157","severity":1,"message":"184","line":33,"column":10,"nodeType":"159","messageId":"160","endLine":33,"endColumn":30},{"ruleId":"157","severity":1,"message":"185","line":53,"column":10,"nodeType":"159","messageId":"160","endLine":53,"endColumn":25},{"ruleId":"165","replacedBy":"186"},{"ruleId":"167","replacedBy":"187"},{"ruleId":"157","severity":1,"message":"188","line":7,"column":10,"nodeType":"159","messageId":"160","endLine":7,"endColumn":22},{"ruleId":"157","severity":1,"message":"189","line":13,"column":10,"nodeType":"159","messageId":"160","endLine":13,"endColumn":27},{"ruleId":"190","severity":1,"message":"191","line":77,"column":3,"nodeType":"155","messageId":"192","endLine":78,"endColumn":4},{"ruleId":"157","severity":1,"message":"193","line":89,"column":5,"nodeType":"159","messageId":"160","endLine":89,"endColumn":16},{"ruleId":"165","replacedBy":"194"},{"ruleId":"167","replacedBy":"195"},{"ruleId":"165","replacedBy":"196"},{"ruleId":"167","replacedBy":"197"},{"ruleId":"157","severity":1,"message":"198","line":41,"column":18,"nodeType":"159","messageId":"160","endLine":41,"endColumn":21},{"ruleId":"157","severity":1,"message":"188","line":24,"column":10,"nodeType":"159","messageId":"160","endLine":24,"endColumn":22},{"ruleId":"157","severity":1,"message":"199","line":30,"column":10,"nodeType":"159","messageId":"160","endLine":30,"endColumn":27},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'prependCall' is defined but never used.","Identifier","unusedVar","no-unreachable","Unreachable code.","IfStatement","unreachableCode","no-native-reassign",["200"],"no-negated-in-lhs",["201"],"'refs' is assigned a value but never used.","'currentCall' is assigned a value but never used.",["200"],["201"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["200"],["201"],"'Header' is defined but never used.","'beginImportTalkgroup' is defined but never used.","'importTalkgroupSuccess' is defined but never used.","'importTalkgroupError' is defined but never used.","'beginExportTalkgroup' is defined but never used.","'exportTalkgroupSuccess' is defined but never used.","'exportTalkgroupError' is defined but never used.","'makeUserRequest' is defined but never used.",["200"],["201"],"'updateObject' is defined but never used.","'updateItemInArray' is defined but never used.","no-dupe-class-members","Duplicate name 'componentDidUpdate'.","unexpected","'playEnabled' is assigned a value but never used.",["200"],["201"],["200"],["201"],"'src' is assigned a value but never used.","'updateCallInItems' is defined but never used.","no-global-assign","no-unsafe-negation"]