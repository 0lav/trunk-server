[{"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/ListCalls.js":"1","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/call-actions.js":"2","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/System/ListSystemsContainer.js":"3","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/CallPlayer.js":"4","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Group/group-constants.js":"5","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/SupportModal.js":"6","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/FilterModal.js":"7","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/query-string.js":"8","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/CalendarModal.js":"9","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/redux-router/configureStore.js":"10","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Talkgroups/talkgroup-actions.js":"11","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Group/group-reducer.js":"12","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/MediaPlayer.js":"13","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/GroupModal.js":"14","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Group/group-actions.js":"15","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/redux-router/reducers.js":"16","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/System/SystemCard.js":"17","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/CalendarModalContainer.js":"18"},{"size":1249,"mtime":1609596364896,"results":"19","hashOfConfig":"20"},{"size":9179,"mtime":1609597700043,"results":"21","hashOfConfig":"20"},{"size":277,"mtime":1545362103911,"results":"22","hashOfConfig":"20"},{"size":18156,"mtime":1609597871834,"results":"23","hashOfConfig":"20"},{"size":151,"mtime":1545362103908,"results":"24","hashOfConfig":"20"},{"size":1325,"mtime":1591209153088,"results":"25","hashOfConfig":"20"},{"size":4437,"mtime":1560856294173,"results":"26","hashOfConfig":"20"},{"size":362,"mtime":1609596675259,"results":"27","hashOfConfig":"20"},{"size":1778,"mtime":1609597248589,"results":"28","hashOfConfig":"20"},{"size":759,"mtime":1609425817988,"results":"29","hashOfConfig":"20"},{"size":2433,"mtime":1609597717050,"results":"30","hashOfConfig":"20"},{"size":1395,"mtime":1545362103908,"results":"31","hashOfConfig":"20"},{"size":4251,"mtime":1609599087987,"results":"32","hashOfConfig":"20"},{"size":2023,"mtime":1551754660116,"results":"33","hashOfConfig":"20"},{"size":1747,"mtime":1609597708479,"results":"34","hashOfConfig":"20"},{"size":595,"mtime":1609596047661,"results":"35","hashOfConfig":"20"},{"size":2045,"mtime":1609520570000,"results":"36","hashOfConfig":"20"},{"size":763,"mtime":1545362103896,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1du4mf8",{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":6,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/ListCalls.js",["78","79"],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/call-actions.js",["80","81","82"],"import axios from \"axios\";\n\nimport * as types from \"./call-constants\";\nimport { push } from 'connected-react-router';\n\nconst FETCH_SUCCESS_STATISTIC = \"FETCH_SUCCESS_STATISTIC\"\n\nfunction beginFetchCallInfo() {\n  return { type: types.FETCH_CALL_INFO };\n}\n\nfunction fetchCallInfoSuccess(data) {\n  return { type: types.FETCH_SUCCESS_CALL_INFO,\n  data };\n}\n\nfunction fetchCallInfoError(data) {\n  return { type: types.FETCH_ERROR_CALL_INFO,\n  data };\n}\n\nfunction prependCall() {\n  return { type: types.PREPEND_CALL };\n}\n\nfunction beginAddStar() {\n  return { type: types.ADD_STAR };\n}\n\nfunction addStarSuccess(data) {\n  return { type: types.ADD_STAR_SUCCESS, data };\n}\n\nfunction addStarError(data) {\n  return { type: types.ADD_STAR_ERROR, data };\n}\n\nfunction beginFetchCall() {\n  return { type: types.FETCH_CALL };\n}\n\nfunction fetchCallSuccess(data) {\n  return { type: types.FETCH_SUCCESS_CALL,\n  data };\n}\n\n\n\nfunction fetchOlderCallSuccess(data) {\n  return { type: types.FETCH_SUCCESS_OLDER_CALL,\n  data };\n}\n\nfunction fetchNewerCallSuccess(data) {\n  return { type: types.FETCH_SUCCESS_NEWER_CALL,\n  data };\n}\n\nfunction fetchCallError(data) {\n  return { type: types.FETCH_ERROR_CALL,\n  data };\n}\n\n\nexport function changeUrl(url) {\n  return dispatch => {\n    dispatch(push(url));\n  };\n}\n\n// Example of an Async Action Creator\n// http://redux.js.org/docs/advanced/AsyncActions.html\n\nfunction shouldFetchCalls(state, subreddit) {\n  return true;\n  if ((!state.call.items) || (state.call.items.length <1)) {\n    return true\n  } else if (state.call.isWaiting) {\n    return false\n  } else {\n    return false\n  }\n}\n\n\n\n\nfunction buildUrlParams(a) {\n return Object.keys(a).map(function(k) {\n      return encodeURIComponent(k) + '=' + encodeURIComponent(a[k])\n  }).join('&')\n}\n\nfunction buildCallUrl(state, date, direction) {\n    var params = {};\n    var url = \"\";\n\n\n    if ((typeof direction === 'string') && (typeof date === 'number')) {\n        url = url + '/' + direction;\n        params[\"time\"] = date;\n    } else {\n      if (state.call.filterDate){\n        url = url + '/older'\n        params[\"time\"] = state.call.filterDate;\n      }\n    }\n    if (state.call.filterStarred) {\n      params[\"filter-starred\"] = true;\n    }\n    switch(state.call.filterType) {\n      case 1:\n      params[\"filter-type\"] = \"group\";\n      params[\"filter-code\"] = state.call.filterGroupId;\n      break;\n      case 2:\n      params[\"filter-type\"] = \"talkgroup\";\n      params[\"filter-code\"] = state.call.filterTalkgroups;\n      break;\n      default:\n      case 0:\n    }\n/*\n\n    if (this.filterCode != \"\") {\n        params[\"filter-code\"] = this.filterCode;\n    }\n\n    if (this.filterType == this.FilterType.Group) {\n        params[\"filter-type\"] = \"group\";\n        params[\"filter-name\"] = this.filterName;\n    }\n\n    if (this.filterType == this.FilterType.Talkgroup) {\n        params[\"filter-type\"] = \"talkgroup\";\n    }\n\n    if (this.filterType == this.FilterType.Unit) {\n        params[\"filter-type\"] = \"unit\";\n    }\n\n*/\n  //  url = startUp.backend_server + \"/\" + startUp.shortName.toLowerCase() + \"/calls\" + url + '?' + buildUrlParams(params);\n    url = process.env.REACT_APP_BACKEND_SERVER + \"/\" + state.call.shortName + \"/calls\" + url + '?' + buildUrlParams(params);\n    console.log(\"Trying to fetch data from this url: \" + url);\n    return url;\n}\n\nexport function fetchNewerCalls( timestamp) {\n  return (dispatch, getState) => {\n    const state = getState();\n    if (shouldFetchCalls(state)) {\n    dispatch(beginFetchCall());\n    const url = buildCallUrl(state, timestamp, \"newer\")\n    return axios\n      .get(url)\n      .then(response => {\n        if ((response.data) && (response.data.calls.length >0)) {\n          var data = {shortName: state.call.shortName, calls: response.data.calls}\n          dispatch(fetchNewerCallSuccess(data));\n        } else {\n          dispatch(fetchCallError());\n          let registerMessage = response.data.message;\n          return registerMessage;\n        }\n      })\n      .catch(response => {\n        if (response instanceof Error) {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", response.message);\n        }\n      });\n  };\n};\n}\n\n\nexport function fetchOlderCalls( timestamp) {\n  return (dispatch, getState) => {\n    const state = getState();\n    if (shouldFetchCalls(state)) {\n    dispatch(beginFetchCall());\n    const url = buildCallUrl(state, timestamp, \"older\")\n    return axios\n      .get(url)\n      .then(response => {\n        if (response.data) {\n          var data = {shortName: state.call.shortName, calls: response.data.calls}\n          dispatch(fetchOlderCallSuccess(data));\n        } else {\n          dispatch(fetchCallError());\n          let registerMessage = response.data.message;\n          return registerMessage;\n        }\n      })\n      .catch(response => {\n        if (response instanceof Error) {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", response.message);\n        }\n      });\n  };\n};\n}\n\n\nexport function addStar( callId) {\n  return (dispatch, getState) => {\n    const state = getState();\n    dispatch(beginAddStar());\n\n    const url = process.env.REACT_APP_BACKEND_SERVER + \"/\" + state.call.shortName.toLowerCase() + \"/star/\" + callId\n    return axios\n      .post(url,{}, {\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      }).then(response => {\n        if (response.data.success) {\n          dispatch(addStarSuccess(response.data.call));\n        } else {\n          dispatch(addStarError());\n          let registerMessage = response.data.message;\n          return registerMessage;\n        }\n      })\n      .catch(response => {\n        if (response instanceof Error) {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", response.message);\n        }\n      });\n  };\n};\n\n\n\nexport function fetchCallInfo( callId) {\n  return (dispatch, getState) => {\n    const state = getState();\n    dispatch(beginFetchCallInfo());\n\n    const url = process.env.REACT_APP_BACKEND_SERVER + \"/\" + state.call.shortName.toLowerCase() + \"/call/\" + callId\n    return axios\n      .get(url)\n      .then(response => {\n        if (response.data.success) {\n          dispatch(fetchCallInfoSuccess(response.data.call));\n        } else {\n          dispatch(fetchCallInfoError());\n          let registerMessage = response.data.message;\n          return registerMessage;\n        }\n      })\n      .catch(response => {\n        if (response instanceof Error) {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", response.message);\n        }\n      });\n  };\n};\n\nexport function fetchCalls() {\n  return (dispatch, getState) => {\n    const state = getState();\n    if (shouldFetchCalls(state)) {\n    dispatch(beginFetchCall());\n    const url=buildCallUrl(state);\n    return axios\n      .get(url)\n      .then(response => {\n        if (response.data) {\n          // check to make sure you actually got some calls back.\n          if (response.data.calls.length > 0) {\n          var data = {shortName: state.call.shortName, calls: response.data.calls}\n          dispatch(fetchCallSuccess(data));\n          } else {\n            dispatch(fetchCallError());\n          }\n        } else {\n          dispatch(fetchCallError());\n          let registerMessage = response.data.message;\n          return registerMessage;\n        }\n      })\n      .catch(response => {\n        if (response instanceof Error) {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", response.message);\n        }\n      });\n  };\n};\n}\n\nexport function addCall(call) {\n  return (dispatch, getState) => {\n    dispatch({ type: types.UPSERT_CALL,  data: call});\n  };\n}\n\nexport function setStarred(starred) {\n  return (dispatch, getState) => {\n    dispatch({ type: types.SET_STARRED_FILTER,  data: starred});\n  };\n}\n\nexport function setLive(live) {\n  return (dispatch, getState) => {\n    dispatch({ type: types.SET_LIVE,  data: live});\n  };\n}\n\nexport function setCurrentCallId(callId) {\n  return (dispatch, getState) => {\n    dispatch({ type: types.SET_CURRENT_CALL_ID,  data: callId});\n  };\n}\n\n// should be as a unix timestamp\nexport function setDateFilter(date) {\n  return (dispatch, getState) => {\n    dispatch({ type: types.SET_DATE_FILTER, date: date});\n  };\n}\n\nexport function setAllFilter() {\n  return (dispatch, getState) => {\n    dispatch({ type: types.SET_ALL_FILTER});\n  };\n}\n\nexport function setTalkgroupFilter(tgs) {\n  return (dispatch, getState) => {\n    dispatch({ type: types.SET_TALKGROUP_FILTER, talkgroups: tgs});\n  };\n}\n\nexport function setGroupFilter(groupId) {\n  return (dispatch, getState) => {\n    dispatch({ type: types.SET_GROUP_FILTER, groupId: groupId});\n  };\n}\n\nexport function setShortName(shortName) {\n  return (dispatch, getState) => {\n    dispatch({ type: types.SET_SHORT_NAME,  data: shortName});\n  };\n}\n\nexport function setFilter(filter) {\n  return (dispatch, getState) => {\n    dispatch({ type: types.SET_FILTER,  data: filter});\n  };\n}\n","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/System/ListSystemsContainer.js",[],["83","84"],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/CallPlayer.js",["85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103"],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Group/group-constants.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/SupportModal.js",["104"],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/FilterModal.js",["105","106","107"],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/query-string.js",["108"],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/CalendarModal.js",["109"],"import React, { Component } from \"react\";\nimport {\n  Modal,\n  Button,\n  Icon,\n  Header\n} from \"semantic-ui-react\";\nimport \"./CalendarModal.css\";\nimport DatePicker from 'react-datepicker';\nimport {  subDays } from 'date-fns'\nimport 'react-datepicker/dist/react-datepicker.css';\n\nclass CalendarModal extends Component {\n  constructor(props) {\n    super(props)\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleDone = this.handleDone.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n\n    this.state = {\n      open: false,\n      startDate: new Date()\n    }\n}\n\nhandleDateChange = (date) => {\n    this.setState({\n      startDate: date\n    });\n  }\n\nhandleClose = () => this.props.onClose(false);\nhandleDone(event) {\n  this.props.callActions.setDateFilter(this.state.startDate.getTime());\n  this.props.onClose(true);\n}\n\n\n  render() {\n    \n    return (\n\n      <Modal open={this.props.open} onClose={this.handleClose} centered={false} size=\"tiny\">\n        <Modal.Header>Select a Date & Time</Modal.Header>\n        <Modal.Content >\n          <Modal.Description>\n            <DatePicker\n                selected={this.state.startDate}\n                onChange={this.handleDateChange}\n                maxDate={new Date()}\n                minDate={subDays(new Date(), process.env.REACT_APP_ARCHIVE_DAYS)}\n                showTimeSelect\n                timeFormat=\"HH:mm\"\n                timeIntervals={15}\n                dateFormat=\"LLL\"\n                inline\n            />\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button onClick={this.handleDone} >\n            <Icon name='checkmark' /> Done\n          </Button>\n        </Modal.Actions>\n      </Modal>\n\n    )\n  }\n}\n\nexport default CalendarModal;\n","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/redux-router/configureStore.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Talkgroups/talkgroup-actions.js",["110","111","112","113","114","115","116"],"import axios from 'axios';\n//import { browserHistory } from \"react-router\"\nimport * as types from \"./talkgroup-constants\";\nimport { push } from 'connected-react-router';\n\n// \"Log In\" action creators\nfunction beginImportTalkgroup() {\n  return { type: types.IMPORT_TALKGROUP };\n}\n\nfunction importTalkgroupSuccess(data) {\n  return {\n    type: types.IMPORT_SUCCESS_TALKGROUP,\n    data\n  };\n}\n\nfunction importTalkgroupError(data) {\n  return {\n    type: types.IMPORT_ERROR_TALKGROUP,\n    data\n  };\n}\n\nfunction beginExportTalkgroup() {\n  return { type: types.EXPORT_TALKGROUP };\n}\n\nfunction exportTalkgroupSuccess() {\n  return { type: types.EXPORT_SUCCESS_TALKGROUP };\n}\n\nfunction exportTalkgroupError() {\n  return { type: types.EXPORT_ERROR_TALKGROUP };\n}\n\n\nfunction beginFetchTalkgroup() {\n  return { type: types.FETCH_TALKGROUP };\n}\n\nfunction fetchTalkgroupSuccess(data) {\n  return { type: types.FETCH_SUCCESS_TALKGROUP,\n  data };\n}\n\nfunction fetchTalkgroupError(data) {\n  return { type: types.FETCH_ERROR_TALKGROUP,\n  data };\n}\n\n\nfunction makeUserRequest(method, data, api) {\n  // returns a Promise\n  return axios({\n    method: method,\n    url: api,\n    data: data\n  });\n}\n\nexport function changeUrl(url) {\n  return dispatch => {\n    dispatch(push(url));\n  };\n}\n\n\n// https://stackoverflow.com/questions/41878838/how-do-i-set-multipart-in-axios-with-react\n\n\n\nfunction shouldFetchTalkgroups(state, shortName) {\n  if (!state.talkgroup.items.hasOwnProperty(shortName)) {\n    return true\n  } else if (state.talkgroup.isWaiting) {\n    return false\n  } else {\n    return false\n  }\n}\n\nexport function fetchTalkgroups(shortName) {\n  return (dispatch, getState) => {\n    if (shouldFetchTalkgroups(getState(), shortName)) {\n    dispatch(beginFetchTalkgroup());\n\n    return axios\n      .get(process.env.REACT_APP_BACKEND_SERVER + \"/\" + shortName + \"/talkgroups\")\n      .then(response => {\n        if (response.data) {\n          var data = {shortName: shortName, talkgroups: response.data.talkgroups}\n          dispatch(fetchTalkgroupSuccess( data));\n        } else {\n          dispatch(fetchTalkgroupError());\n          let registerMessage = response.data.message;\n          return registerMessage;\n        }\n      })\n      .catch(response => {\n        if (response instanceof Error) {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", response.message);\n        }\n      });\n  };\n};\n}\n","/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Group/group-reducer.js",["117","118"],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/MediaPlayer.js",["119","120"],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/GroupModal.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Group/group-actions.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/redux-router/reducers.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/System/SystemCard.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/frontend/src/Call/CalendarModalContainer.js",[],{"ruleId":"121","severity":1,"message":"122","line":12,"column":3,"nodeType":"123","messageId":"124","endLine":15,"endColumn":4},{"ruleId":"125","severity":1,"message":"126","line":33,"column":89,"nodeType":"127","messageId":"128","endLine":33,"endColumn":91},{"ruleId":"129","severity":1,"message":"130","line":6,"column":7,"nodeType":"131","messageId":"132","endLine":6,"endColumn":30},{"ruleId":"129","severity":1,"message":"133","line":22,"column":10,"nodeType":"131","messageId":"132","endLine":22,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":76,"column":3,"nodeType":"136","messageId":"137","endLine":82,"endColumn":4},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"129","severity":1,"message":"142","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":16},{"ruleId":"129","severity":1,"message":"143","line":18,"column":3,"nodeType":"131","messageId":"132","endLine":18,"endColumn":8},{"ruleId":"144","severity":1,"message":"145","line":123,"column":5,"nodeType":"146","messageId":"147","endLine":132,"endColumn":6},{"ruleId":"148","severity":2,"message":"149","line":137,"column":5,"nodeType":"131","messageId":"150","endLine":137,"endColumn":11},{"ruleId":"148","severity":2,"message":"149","line":138,"column":5,"nodeType":"131","messageId":"150","endLine":138,"endColumn":11},{"ruleId":"148","severity":2,"message":"149","line":141,"column":5,"nodeType":"131","messageId":"150","endLine":141,"endColumn":11},{"ruleId":"148","severity":2,"message":"149","line":142,"column":5,"nodeType":"131","messageId":"150","endLine":142,"endColumn":11},{"ruleId":"148","severity":2,"message":"149","line":151,"column":5,"nodeType":"131","messageId":"150","endLine":151,"endColumn":11},{"ruleId":"148","severity":2,"message":"149","line":160,"column":5,"nodeType":"131","messageId":"150","endLine":160,"endColumn":11},{"ruleId":"144","severity":1,"message":"145","line":177,"column":5,"nodeType":"146","messageId":"147","endLine":185,"endColumn":6},{"ruleId":"125","severity":1,"message":"151","line":187,"column":24,"nodeType":"127","messageId":"128","endLine":187,"endColumn":26},{"ruleId":"125","severity":1,"message":"151","line":194,"column":24,"nodeType":"127","messageId":"128","endLine":194,"endColumn":26},{"ruleId":"129","severity":1,"message":"152","line":276,"column":15,"nodeType":"131","messageId":"132","endLine":276,"endColumn":19},{"ruleId":"125","severity":1,"message":"126","line":307,"column":38,"nodeType":"127","messageId":"128","endLine":307,"endColumn":40},{"ruleId":"125","severity":1,"message":"126","line":341,"column":30,"nodeType":"127","messageId":"128","endLine":341,"endColumn":32},{"ruleId":"125","severity":1,"message":"126","line":349,"column":30,"nodeType":"127","messageId":"128","endLine":349,"endColumn":32},{"ruleId":"144","severity":1,"message":"145","line":392,"column":7,"nodeType":"146","messageId":"147","endLine":402,"endColumn":8},{"ruleId":"129","severity":1,"message":"153","line":448,"column":12,"nodeType":"131","messageId":"132","endLine":448,"endColumn":26},{"ruleId":"144","severity":1,"message":"145","line":465,"column":5,"nodeType":"146","messageId":"147","endLine":472,"endColumn":6},{"ruleId":"129","severity":1,"message":"154","line":6,"column":3,"nodeType":"131","messageId":"132","endLine":6,"endColumn":11},{"ruleId":"144","severity":1,"message":"145","line":39,"column":3,"nodeType":"146","messageId":"147","endLine":60,"endColumn":4},{"ruleId":"125","severity":1,"message":"151","line":61,"column":32,"nodeType":"127","messageId":"128","endLine":61,"endColumn":34},{"ruleId":"155","severity":1,"message":"156","line":93,"column":13,"nodeType":"131","messageId":"157","endLine":93,"endColumn":16},{"ruleId":"158","severity":1,"message":"159","line":1,"column":1,"nodeType":"160","endLine":11,"endColumn":2},{"ruleId":"129","severity":1,"message":"161","line":6,"column":3,"nodeType":"131","messageId":"132","endLine":6,"endColumn":9},{"ruleId":"129","severity":1,"message":"162","line":7,"column":10,"nodeType":"131","messageId":"132","endLine":7,"endColumn":30},{"ruleId":"129","severity":1,"message":"163","line":11,"column":10,"nodeType":"131","messageId":"132","endLine":11,"endColumn":32},{"ruleId":"129","severity":1,"message":"164","line":18,"column":10,"nodeType":"131","messageId":"132","endLine":18,"endColumn":30},{"ruleId":"129","severity":1,"message":"165","line":25,"column":10,"nodeType":"131","messageId":"132","endLine":25,"endColumn":30},{"ruleId":"129","severity":1,"message":"166","line":29,"column":10,"nodeType":"131","messageId":"132","endLine":29,"endColumn":32},{"ruleId":"129","severity":1,"message":"167","line":33,"column":10,"nodeType":"131","messageId":"132","endLine":33,"endColumn":30},{"ruleId":"129","severity":1,"message":"168","line":53,"column":10,"nodeType":"131","messageId":"132","endLine":53,"endColumn":25},{"ruleId":"129","severity":1,"message":"169","line":7,"column":10,"nodeType":"131","messageId":"132","endLine":7,"endColumn":22},{"ruleId":"129","severity":1,"message":"170","line":13,"column":10,"nodeType":"131","messageId":"132","endLine":13,"endColumn":27},{"ruleId":"125","severity":1,"message":"151","line":69,"column":41,"nodeType":"127","messageId":"128","endLine":69,"endColumn":43},{"ruleId":"129","severity":1,"message":"171","line":89,"column":5,"nodeType":"131","messageId":"132","endLine":89,"endColumn":16},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'FETCH_SUCCESS_STATISTIC' is assigned a value but never used.","Identifier","unusedVar","'prependCall' is defined but never used.","no-unreachable","Unreachable code.","IfStatement","unreachableCode","no-native-reassign",["172"],"no-negated-in-lhs",["173"],"'CallItem' is defined but never used.","'Table' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-undef","'socket' is not defined.","undef","Expected '!==' and instead saw '!='.","'refs' is assigned a value but never used.","'sidebarVisible' is assigned a value but never used.","'Dropdown' is defined but never used.","no-redeclare","'obj' is already defined.","redeclared","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Header' is defined but never used.","'beginImportTalkgroup' is defined but never used.","'importTalkgroupSuccess' is defined but never used.","'importTalkgroupError' is defined but never used.","'beginExportTalkgroup' is defined but never used.","'exportTalkgroupSuccess' is defined but never used.","'exportTalkgroupError' is defined but never used.","'makeUserRequest' is defined but never used.","'updateObject' is defined but never used.","'updateItemInArray' is defined but never used.","'playEnabled' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]