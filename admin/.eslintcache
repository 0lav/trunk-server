[{"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/App.js":"1","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/features/counter/Counter.js":"2","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/App/Navigation.js":"3","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/error-constants.js":"4","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/redux-router/configureStore.js":"5","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/Permission/permission-reducer.js":"6","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/Group/group-reducer.js":"7","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/error-reducer.js":"8","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/index.js":"9","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/Components/About.js":"10","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/App/NavigationContainer.js":"11","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/system-constants.js":"12","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/User/user-actions.js":"13","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/SystemCard.js":"14","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/App/Restricted.js":"15","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/system-actions.js":"16","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/User/user-constants.js":"17","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/Talkgroups/talkgroup-reducer.js":"18","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/App/App.js":"19","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/Permission/permission-constants.js":"20","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/ListSystems.js":"21","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/system-reducer.js":"22","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/redux-router/reducers.js":"23","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/Group/group-constants.js":"24","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/Talkgroups/talkgroup-constants.js":"25","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/SystemForm.js":"26","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/UpdateSystemContainer.js":"27","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/UpdateSystem.js":"28","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/Permission/AddPermissionModalContainer.js":"29","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/CallChart.js":"30","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/CreateSystemContainer.js":"31","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/System.js":"32","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/ResponsiveCallChart.js":"33","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/Group/GroupModal.js":"34","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/Permission/UpdatePermissionModalContainer.js":"35","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/ErrorChart.js":"36","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/SystemContainer.js":"37","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/Talkgroups/talkgroup-actions.js":"38","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/Group/group-actions.js":"39","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/Permission/permission-actions.js":"40"},{"size":1463,"mtime":499162500000,"results":"41","hashOfConfig":"42"},{"size":1626,"mtime":499162500000,"results":"43","hashOfConfig":"42"},{"size":1499,"mtime":1609685400124,"results":"44","hashOfConfig":"42"},{"size":115,"mtime":1545362103836,"results":"45","hashOfConfig":"42"},{"size":759,"mtime":1609425817988,"results":"46","hashOfConfig":"42"},{"size":2037,"mtime":1545362103826,"results":"47","hashOfConfig":"42"},{"size":3029,"mtime":1609813173090,"results":"48","hashOfConfig":"42"},{"size":636,"mtime":1545362103837,"results":"49","hashOfConfig":"42"},{"size":1684,"mtime":1611441482755,"results":"50","hashOfConfig":"42"},{"size":1278,"mtime":1609812739781,"results":"51","hashOfConfig":"42"},{"size":570,"mtime":1609684078480,"results":"52","hashOfConfig":"42"},{"size":862,"mtime":1545362103839,"results":"53","hashOfConfig":"42"},{"size":1344,"mtime":1609686206535,"results":"54","hashOfConfig":"42"},{"size":1145,"mtime":1609813170344,"results":"55","hashOfConfig":"42"},{"size":2024,"mtime":1611506108884,"results":"56","hashOfConfig":"42"},{"size":5933,"mtime":1611507011039,"results":"57","hashOfConfig":"42"},{"size":320,"mtime":1546657322904,"results":"58","hashOfConfig":"42"},{"size":1045,"mtime":1609813166756,"results":"59","hashOfConfig":"42"},{"size":253,"mtime":1609814499873,"results":"60","hashOfConfig":"42"},{"size":688,"mtime":1545362103825,"results":"61","hashOfConfig":"42"},{"size":1156,"mtime":1609813188195,"results":"62","hashOfConfig":"42"},{"size":2262,"mtime":1609813202417,"results":"63","hashOfConfig":"42"},{"size":858,"mtime":1611513056121,"results":"64","hashOfConfig":"42"},{"size":848,"mtime":1545362103820,"results":"65","hashOfConfig":"42"},{"size":537,"mtime":1545362103845,"results":"66","hashOfConfig":"42"},{"size":13151,"mtime":1608606472255,"results":"67","hashOfConfig":"42"},{"size":381,"mtime":1609814717150,"results":"68","hashOfConfig":"42"},{"size":1137,"mtime":1609814723480,"results":"69","hashOfConfig":"42"},{"size":608,"mtime":1545362103822,"results":"70","hashOfConfig":"42"},{"size":3099,"mtime":1611496772792,"results":"71","hashOfConfig":"42"},{"size":277,"mtime":1546482642525,"results":"72","hashOfConfig":"42"},{"size":20243,"mtime":1611495881969,"results":"73","hashOfConfig":"42"},{"size":613,"mtime":1611443036463,"results":"74","hashOfConfig":"42"},{"size":7830,"mtime":1608606472254,"results":"75","hashOfConfig":"42"},{"size":617,"mtime":1545362103824,"results":"76","hashOfConfig":"42"},{"size":4201,"mtime":1611495367506,"results":"77","hashOfConfig":"42"},{"size":1677,"mtime":1611514031099,"results":"78","hashOfConfig":"42"},{"size":4717,"mtime":1611514305299,"results":"79","hashOfConfig":"42"},{"size":6194,"mtime":1611514572537,"results":"80","hashOfConfig":"42"},{"size":4578,"mtime":1611514663911,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"108517c",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"109"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"109"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/App.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/features/counter/Counter.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/App/Navigation.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/error-constants.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/redux-router/configureStore.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/Permission/permission-reducer.js",[],["169","170"],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/Group/group-reducer.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/error-reducer.js",[],["171","172"],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/index.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/Components/About.js",[],["173","174"],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/App/NavigationContainer.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/system-constants.js",[],["175","176"],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/User/user-actions.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/SystemCard.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/App/Restricted.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/system-actions.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/User/user-constants.js",[],["177","178"],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/Talkgroups/talkgroup-reducer.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/App/App.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/Permission/permission-constants.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/ListSystems.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/system-reducer.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/redux-router/reducers.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/Group/group-constants.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/Talkgroups/talkgroup-constants.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/SystemForm.js",["179","180","181","182","183","184","185","186","187","188","189"],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/UpdateSystemContainer.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/UpdateSystem.js",["190"],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/Permission/AddPermissionModalContainer.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/CallChart.js",["191","192","193","194","195","196"],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/CreateSystemContainer.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/System.js",["197","198","199","200","201"],"import React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport ListTalkgroups from \"../Talkgroups/ListTalkgroups.js\";\nimport MessageBox from \"../Components/Message.js\";\nimport ListGroups from \"../Group/ListGroups.js\";\nimport GroupModal from \"../Group/GroupModalContainer.js\";\nimport UpdatePermissionModal from \"../Permission/UpdatePermissionModalContainer.js\";\nimport AddPermissionModal from \"../Permission/AddPermissionModalContainer.js\";\nimport ErrorChart from \"./ResponsiveErrorChart\"\nimport CallChart from \"./ResponsiveCallChart\"\nimport {\n  Button,\n  Confirm,\n  Icon,\n  Form,\n  TextArea,\n  Header,\n  Container,\n  Message,\n  List,\n  Segment,\n  Tab,\n  Divider,\n  Label\n} from \"semantic-ui-react\";\n\n\nclass System extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUpload = this.handleUpload.bind(this);\n    this.reorderGroup = this.reorderGroup.bind(this);\n    this.deleteGroup = this.deleteGroup.bind(this);\n    this.editGroup = this.editGroup.bind(this);\n    this.saveGroupOrder = this.saveGroupOrder.bind(this);\n    this.showSystemDeleteConfirm = this.showSystemDeleteConfirm.bind(this);\n    this.showPermissionDeleteConfirm = this.showPermissionDeleteConfirm.bind(\n      this\n    );\n    this.updatePermission = this.updatePermission.bind(this);\n    this.handlePermissionDeleteConfirm = this.handlePermissionDeleteConfirm.bind(\n      this\n    );\n    this.handlePermissionDeleteCancel = this.handlePermissionDeleteCancel.bind(\n      this\n    );\n    this.handleSystemDeleteConfirm = this.handleSystemDeleteConfirm.bind(this);\n    this.handleSystemDeleteCancel = this.handleSystemDeleteCancel.bind(this);\n    this.handleUpdatePermissionClose = this.handleUpdatePermissionClose.bind(\n      this\n    );\n    this.handleGroupToggle = this.handleGroupToggle.bind(this);\n    this.handleGroupClose = this.handleGroupClose.bind(this);\n    this.handleAddPermissionToggle = this.handleAddPermissionToggle.bind(this);\n    this.handleAddPermissionClose = this.handleAddPermissionClose.bind(this);\n    this.processErrors = this.processErrors.bind(this);\n    this.processStatistics = this.processStatistics.bind(this);\n    this.state = {\n      openSystemDeleteConfirm: false,\n      openPermissionDeleteConfirm: false,\n      openMessage: false,\n      requestMessage: \"\",\n      groupVisible: false,\n      editGroupId: false,\n      selectedPermission: false,\n      addPermissionVisible: false,\n      updatePermissionVisible: false,\n      updatePermissionId: false\n    };\n  }\n\n  processErrors(errors) {\n    var allData = [];\n\n    var num = 0;\n    const now = new Date();\n    var maxDate = now;\n    var minDate = now;\n    var minValue = 0;\n    var maxValue = 0;\n    var legend = [];\n    for (var j = 0; j < errors.length; j++) {\n      var data = [];\n      for (var i = 0; i < errors[j].values.length; i++) {\n        var time = new Date(errors[j].values[i].time);\n        if (errors[j].values[i].errors > maxValue)\n          maxValue = errors[j].values[i].errors;\n        if (time < minDate) minDate = time;\n        var value = {\n          id: num++,\n          y: errors[j].values[i].errors,\n          x: time\n        };\n        data.push(value);\n      }\n      const id = Math.floor(errors[j]._id / 1000) / 1000 + \"MHz\";\n      legend.push(id);\n      var obj = {\n        id: id,\n        data: data\n      };\n      allData.push(obj);\n    }\n    const errorData = {\n      data: allData,\n      minDate: minDate,\n      maxDate: maxDate,\n      minValue: minValue,\n      maxValue: maxValue,\n      legend: legend\n    };\n\n    this.setState({ errorData: errorData });\n  }\n  processStatistics(statistic) {\n    var callTotals = [];\n    var errorTotals = [];\n    const now = new Date();\n    var maxDate = now;\n    var minDate = now;\n    var minValue = 0;\n    var maxValue = 0;\n    var MS_PER_MINUTE = 60000;\n    for (var j = 0; j < statistic.callTotals.length; j++) {\n      var spotsBack = statistic.callTotals.length - j;\n      var time = new Date(now - spotsBack * 15 * MS_PER_MINUTE);\n      if (time < minDate) minDate = time;\n      if (statistic.callTotals[j] > maxValue)\n        maxValue = statistic.callTotals[j];\n      callTotals.push({ y: statistic.callTotals[j], x: time });\n    }\n    for (var j = 0; j < statistic.errorTotals.length; j++) {\n      var spotsBack = statistic.errorTotals.length - j;\n      var time = new Date(now - spotsBack * 15 * MS_PER_MINUTE);\n      if (time < minDate) minDate = time;\n      if (statistic.errorTotals[j] > maxValue)\n        maxValue = statistic.errorTotals[j];\n      errorTotals.push({ x: time, y: statistic.errorTotals[j] });\n    }\n    var callData = {\n      minDate: minDate,\n      maxDate: maxDate,\n      minValue: minValue,\n      maxValue: maxValue,\n      callTotals: callTotals,\n      errorTotals: errorTotals\n    };\n\n    this.setState({ callData: callData });\n  }\n  componentDidMount() {\n    this.props.systemActions.fetchSystems();\n    this.props.talkgroupActions.fetchTalkgroups(this.props.shortName);\n    this.props.groupActions.fetchGroups(this.props.shortName);\n    this.props.errorActions.fetch(this.props.shortName);\n    this.props.permissionActions.fetch(this.props.shortName);\n    if (this.props.statistic) {\n      this.processStatistics(this.props.statistic);\n    }\n    if (this.props.errors) {\n      this.processErrors(this.props.errors);\n    }\n  }\n\n  componentWillReceiveProps(nextProp) {\n    if (!this.props.errors && nextProp.errors) {\n      this.processErrors(nextProp.errors);\n    }\n    if (!this.props.statistic && nextProp.statistic) {\n      this.processStatistics(nextProp.statistic);\n    }\n  }\n\n  updatePermission(permissionId) {\n    this.setState({\n      updatePermissionId: permissionId,\n      updatePermissionVisible: !this.state.updatePermissionVisible\n    });\n  }\n\n  editGroup(groupId) {\n    this.setState({\n      editGroupId: groupId,\n      groupVisible: !this.state.groupVisible\n    });\n  }\n\n  deleteGroup(groupId) {\n    this.props.groupActions.deleteGroup(this.props.shortName, groupId);\n  }\n\n  reorderGroup(oldIndex, newIndex) {\n    this.props.groupActions.reorderGroup(\n      this.props.shortName,\n      oldIndex,\n      newIndex\n    );\n  }\n\n  handleUpdatePermissionClose(didUpdate) {\n    this.setState({\n      updatePermissionVisible: !this.state.updatePermissionVisible,\n      updatePermissionId: false\n    });\n  }\n\n  handleAddPermissionClose(didUpdate) {\n    this.setState({\n      addPermissionVisible: !this.state.addPermissionVisible\n    });\n  }\n\n  handleAddPermissionToggle = () =>\n    this.setState({\n      addPermissionVisible: !this.state.addPermissionVisible\n    });\n\n  handleGroupClose(didUpdate) {\n    this.setState({\n      groupVisible: !this.state.groupVisible,\n      editGroupId: false\n    });\n  }\n  handleGroupToggle = () => this.setState({\n    editGroupId: false,\n    groupVisible: !this.state.groupVisible\n  })\n  handleExport() {\n    this.props.talkgroupActions\n      .exportTalkgroups(this.props.system.shortName)\n      .then(requestMessage => {\n        if (requestMessage) {\n          // report to the user is there was a problem during registration\n          this.setState({ requestMessage });\n        }\n      });\n  }\n\n  saveGroupOrder() {\n    const order = this.props.groups.map(x => x._id);\n    const data = {\n      groupOrder: JSON.stringify(order)\n    };\n    this.props.groupActions\n      .saveGroupOrder(this.props.system.shortName, data)\n      .then(requestMessage => {\n        if (requestMessage) {\n        }\n      });\n  }\n\n\n  handleUpload(file) {\n    this.props.talkgroupActions\n      .importTalkgroups(this.props.system.shortName, file)\n      .then(requestMessage => {\n        if (requestMessage) {\n          // report to the user is there was a problem during registration\n          this.setState({ requestMessage });\n        }\n      });\n  }\n\n  // https://github.com/Semantic-Org/Semantic-UI-React/issues/2103\n\n  showPermissionDeleteConfirm = permission =>\n    this.setState({\n      openPermissionDeleteConfirm: true,\n      selectedPermission: permission\n    });\n  showSystemDeleteConfirm = () =>\n    this.setState({ openSystemDeleteConfirm: true });\n\n  handlePermissionDeleteConfirm = permissionId => {\n    this.setState({ openPermissionDeleteConfirm: false });\n    this.props.permissionActions\n      .deletePermission({\n        shortName: this.props.system.shortName,\n        permissionId: this.state.selectedPermission._id\n      })\n      .then(requestMessage => {\n        if (requestMessage) {\n          // report to the user is there was a problem during login\n          this.setState({ requestMessage: requestMessage, openMessage: true });\n        }\n      });\n  };\n\n  handleSystemDeleteConfirm = () => {\n    this.setState({ openSystemDeleteConfirm: false });\n    this.props.systemActions\n      .deleteSystem(this.props.system.shortName)\n      .then(requestMessage => {\n        if (requestMessage) {\n          // report to the user is there was a problem during login\n          this.setState({ requestMessage: requestMessage, openMessage: true });\n        }\n      });\n  };\n  handleSystemDeleteCancel = () =>\n    this.setState({ openSystemDeleteConfirm: false });\n  handlePermissionDeleteCancel = () =>\n    this.setState({ openPermissionDeleteConfirm: false });\n  render() {\n    const system = this.props.system;\n    let fileInput = null;\n    var location = \"\";\n    var example = \"\";\n    var groupRender = () => {};\n\n    if (system) {\n      if (this.props.talkgroups && this.props.talkgroups.length) {\n        groupRender = () => (\n          <div>\n            <Button onClick={this.handleGroupToggle}>Create Group</Button>\n            <Button onClick={this.saveGroupOrder} disabled={!this.props.orderChange}> Save Order</Button>\n            <ListGroups\n              groups={this.props.groups}\n              reorderGroup={this.reorderGroup}\n              deleteGroup={this.deleteGroup}\n              editGroup={this.editGroup}\n            />\n          </div>\n        );\n      } else {\n        groupRender = () => (\n          <Container text>\n            <Message\n              icon=\"upload\"\n              header=\"Import Talkgroups\"\n              content=\"Before you can create groups of Talkgroups, you need to import some talkgroups.\"\n            />\n          </Container>\n        );\n      }\n\n\n      example =\n        '{\\n\\t\"systems\": [\\n\\t\\t{\\n\\t\\t\\t\"shortName\": \"' +\n        system.shortName +\n        '\",\\n\\t\\t\\t\"apiKey\": \"' +\n        system.key +\n        '\"\\n\\t\\t}\\n\\t],\\n\\t\"uploadServer\": \"' +\n        process.env.REACT_APP_BACKEND_SERVER +\n        '\"\\n}';\n\n      switch (system.systemType) {\n        case \"state\":\n          location = system.state;\n          break;\n        case \"city\":\n          location = system.city + \", \" + system.state;\n          break;\n        case \"county\":\n          location = system.county + \", \" + system.state;\n          break;\n        case \"international\":\n          location = system.country;\n          break;\n      }\n    }\n\n    const panes = [\n      {\n        menuItem: \"Overview\",\n        render: () => (\n          <div>\n            <Container text>\n              <Segment.Group>\n                <Segment>\n                  <Header size=\"small\">Location</Header>\n                  {location}\n                </Segment>\n                <Segment>\n                  <Header size=\"small\">Short Name</Header>\n                  {this.props.system.shortName}\n                </Segment>\n                <Segment>\n                  <Header size=\"small\">Description</Header>\n                  {this.props.system.description}\n                </Segment>\n\n                <Segment clearing={true}>\n                  <Button\n                    color=\"red\"\n                    onClick={this.showSystemDeleteConfirm}\n                    disabled={this.props.systemisWaiting}\n                    content=\"Delete\"\n                    floated=\"right\"\n                  />\n                  <Button\n                    as={Link}\n                    to={\"/update-system/\" + this.props.system.shortName}\n                    content=\"Update\"\n                    disabled={this.props.systemisWaiting}\n                    floated=\"left\"\n                  />\n                </Segment>\n              </Segment.Group>\n            </Container>\n          </div>\n        )\n      },\n      {\n        menuItem: \"Config\",\n        render: () => (\n          <div>\n            <Container text>\n              <Header as=\"h2\">Configure Trunk Recorder</Header>\n              <p>\n                Below are the parameters you will need to configure Trunk\n                Recorder. The example below shows how they should be added to\n                the config.json file.\n              </p>\n\n              <Segment.Group>\n                <Segment>\n                  <Header size=\"small\">API Key</Header>\n                  {this.props.system.key}\n                </Segment>\n                <Segment>\n                  <Header size=\"small\">Short Name</Header>\n                  {this.props.system.shortName}\n                </Segment>\n                <Segment>\n                  <Header size=\"small\">Upload Server</Header>\n                  {process.env.REACT_APP_BACKEND_SERVER}\n                </Segment>\n                <Segment>\n                  <Header size=\"small\">Example</Header>\n                  <Form>\n                    <TextArea rows=\"10\" readOnly=\"readOnly\" value={example} />\n                  </Form>\n                </Segment>\n              </Segment.Group>\n            </Container>\n          </div>\n        )\n      },\n      {\n        menuItem: \"Talkgroups\",\n        render: () => (\n          <div>\n            <Container text>\n              <p>\n                <em>\n                  This is the same .csv talkgroup file from Trunk Recorder...\n                  except the Hex column has been deleted\n                </em>\n              </p>\n              <p>The columns for the file are:</p>\n              <List ordered celled>\n                <List.Item>\n                  <List.Content>\n                    <List.Header>Number</List.Header>\n                    <List.Description>The talkgroup number</List.Description>\n                  </List.Content>\n                </List.Item>\n                <List.Item>\n                  <List.Content>\n                    <List.Header>Mode</List.Header>\n                    <List.Description>\n                      The mode for the talkgroup, it can be: 'A' = analog, 'D' =\n                      P25 Digital, 'E' = Encrypted\n                    </List.Description>\n                  </List.Content>\n                </List.Item>\n                <List.Item>\n                  <List.Content>\n                    <List.Header>Alpha</List.Header>\n                    <List.Description>\n                      Up to 12 charecter description of the talkgroup\n                    </List.Description>\n                  </List.Content>\n                </List.Item>\n                <List.Item>\n                  <List.Content>\n                    <List.Header>Description</List.Header>\n                    <List.Description>\n                      The full title for the talkgroup\n                    </List.Description>\n                  </List.Content>\n                </List.Item>\n                <List.Item>\n                  <List.Content>\n                    <List.Header>Tag</List.Header>\n                    <List.Description>\n                      The type of talkgroup, eg: Dispatch, Fireground\n                    </List.Description>\n                  </List.Content>\n                </List.Item>\n                <List.Item>\n                  <List.Content>\n                    <List.Header>Group</List.Header>\n                    <List.Description>\n                      The department that uses this talkgroup\n                    </List.Description>\n                  </List.Content>\n                </List.Item>\n                <List.Item>\n                  <List.Content>\n                    <List.Header>Priority</List.Header>\n                    <List.Description>\n                      The priority for recording this talkgroup, 100 or over\n                      will be skipped\n                    </List.Description>\n                  </List.Content>\n                </List.Item>\n              </List>\n            </Container>\n            <Divider />\n            <span>\n              <label htmlFor=\"upload-button\" className=\"ui icon button\">\n                <i className=\"upload icon\" />\n                Import Talkgroups\n              </label>\n              <input\n                type=\"file\"\n                id=\"upload-button\"\n                style={{\n                  display: \"none\"\n                }}\n                onChange={() => {\n                  this.handleUpload(fileInput.files[0]);\n                }}\n                ref={input => {\n                  fileInput = input;\n                }}\n              />\n            </span>\n            <a href={\"/talkgroups/\" + this.props.system.shortName + \"/export\"}>\n              <Button>\n                <i className=\"upload icon\" />\n                Export Talkgroups\n              </Button>\n            </a>\n            <ListTalkgroups talkgroups={this.props.talkgroups} />\n          </div>\n        )\n      },\n      {\n        menuItem: \"Groups\",\n        render: groupRender\n      },\n      /*{\n        menuItem: \"Users\",\n        render: () => (<Tab.Pane>\n\n\n\n\n\n          <Button onClick={this.handleAddPermissionToggle} >\n            Add User\n          </Button>\n          <ListPermissions permissions={this.props.permissions} updatePermission={this.updatePermission} deletePermission={this.showPermissionDeleteConfirm}/>\n        </Tab.Pane>)\n      },*/ {\n        menuItem: \"Stats\",\n        render: () => (\n          <div>\n            <Divider horizontal>\n              <Icon name=\"microphone\" />\n              24-Hour Call History\n            </Divider>\n            <CallChart data={this.state.callData} />\n            <Divider horizontal>\n              <Icon name=\"microphone\" />\n              Hourly Vocoder Error Percentage\n            </Divider>\n            <ErrorChart data={this.state.errorData} />\n          </div>\n        )\n      }\n    ];\n\n    return (\n      <div>\n        <AddPermissionModal\n          shortName={this.props.shortName}\n          open={this.state.addPermissionVisible}\n          onClose={this.handleAddPermissionClose}\n        />\n\n        <GroupModal\n          shortName={this.props.shortName}\n          editGroupId={this.state.editGroupId}\n          open={this.state.groupVisible}\n          onClose={this.handleGroupClose}\n        />\n        <UpdatePermissionModal\n          shortName={this.props.shortName}\n          updatePermissionId={this.state.updatePermissionId}\n          open={this.state.updatePermissionVisible}\n          onClose={this.handleUpdatePermissionClose}\n        />\n        {system ? (\n          <Container>\n            <MessageBox\n              open={this.state.openMessage}\n              message={this.state.requestMessage}\n              title=\"Delete Failed\"\n              onClose={() => this.setState({ openMessage: false })}\n            />\n            <Confirm\n              open={this.state.openSystemDeleteConfirm}\n              header=\"Are you sure you want to?\"\n              content={\"Delete system - \" + this.props.system.shortName}\n              onCancel={this.handleSystemDeleteCancel}\n              onConfirm={this.handleSystemDeleteConfirm}\n            />\n            <Confirm\n              open={this.state.openPermissionDeleteConfirm}\n              header=\"Are you sure you want to?\"\n              content={\n                \"Remove access for: \" + this.state.selectedPermission.email\n              }\n              onCancel={this.handlePermissionDeleteCancel}\n              onConfirm={this.handlePermissionDeleteConfirm}\n            />\n\n            <Header as=\"h1\">\n              <Header.Content>\n                {this.props.system.name}\n              </Header.Content>\n            </Header>\n\n            <Tab\n              menu={{\n                secondary: true,\n                pointing: true\n              }}\n              panes={panes}\n              defaultActiveIndex={this.props.activeTab}\n            />\n          </Container>\n        ) : (\n          <div />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default System;\n","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/ResponsiveCallChart.js",["202"],"import React, { Component }  from \"react\"\nimport CallChart from \"./CallChart\"\nimport { ParentSize } from \"@visx/responsive\";\n\nclass ResponsiveCallChart extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n\trender() {\n\t\treturn(\n      <ParentSize className=\"graph-container\">\n              {({ width: w, height: h }) => {\n                return (\n                  <CallChart\n                    width={w}\n                    height={h}\n                    data={this.props.data}\n                  />\n                );\n              }}\n      </ParentSize>\n\t\t)\n\t}\n}\n\nexport default ResponsiveCallChart\n","/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/Group/GroupModal.js",["203","204","205","206","207","208","209","210"],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/Permission/UpdatePermissionModalContainer.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/ErrorChart.js",["211","212","213"],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/System/SystemContainer.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/Talkgroups/talkgroup-actions.js",["214","215"],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/Group/group-actions.js",[],"/Users/luke/Projects/OpenMHz/trunk-server-public/admin/src/Permission/permission-actions.js",[],{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"216","replacedBy":"220"},{"ruleId":"218","replacedBy":"221"},{"ruleId":"216","replacedBy":"222"},{"ruleId":"218","replacedBy":"223"},{"ruleId":"216","replacedBy":"224"},{"ruleId":"218","replacedBy":"225"},{"ruleId":"216","replacedBy":"226"},{"ruleId":"218","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":2,"column":8,"nodeType":"230","messageId":"231","endLine":2,"endColumn":16},{"ruleId":"228","severity":1,"message":"232","line":4,"column":3,"nodeType":"230","messageId":"231","endLine":4,"endColumn":12},{"ruleId":"228","severity":1,"message":"233","line":5,"column":3,"nodeType":"230","messageId":"231","endLine":5,"endColumn":9},{"ruleId":"228","severity":1,"message":"234","line":6,"column":3,"nodeType":"230","messageId":"231","endLine":6,"endColumn":11},{"ruleId":"228","severity":1,"message":"235","line":8,"column":3,"nodeType":"230","messageId":"231","endLine":8,"endColumn":11},{"ruleId":"228","severity":1,"message":"236","line":10,"column":3,"nodeType":"230","messageId":"231","endLine":10,"endColumn":7},{"ruleId":"228","severity":1,"message":"237","line":11,"column":3,"nodeType":"230","messageId":"231","endLine":11,"endColumn":10},{"ruleId":"228","severity":1,"message":"238","line":12,"column":3,"nodeType":"230","messageId":"231","endLine":12,"endColumn":8},{"ruleId":"228","severity":1,"message":"239","line":20,"column":7,"nodeType":"230","messageId":"231","endLine":20,"endColumn":29},{"ruleId":"240","severity":1,"message":"241","line":97,"column":37,"nodeType":"242","messageId":"243","endLine":97,"endColumn":39},{"ruleId":"240","severity":1,"message":"244","line":419,"column":26,"nodeType":"242","messageId":"243","endLine":419,"endColumn":28},{"ruleId":"228","severity":1,"message":"245","line":19,"column":14,"nodeType":"230","messageId":"231","endLine":19,"endColumn":22},{"ruleId":"228","severity":1,"message":"246","line":5,"column":23,"nodeType":"230","messageId":"231","endLine":5,"endColumn":32},{"ruleId":"228","severity":1,"message":"247","line":8,"column":10,"nodeType":"230","messageId":"231","endLine":8,"endColumn":16},{"ruleId":"248","severity":1,"message":"249","line":12,"column":1,"nodeType":"250","messageId":"251","endLine":14,"endColumn":2},{"ruleId":"228","severity":1,"message":"252","line":47,"column":11,"nodeType":"230","messageId":"231","endLine":47,"endColumn":19},{"ruleId":"228","severity":1,"message":"253","line":68,"column":9,"nodeType":"230","messageId":"231","endLine":68,"endColumn":15},{"ruleId":"228","severity":1,"message":"254","line":69,"column":9,"nodeType":"230","messageId":"231","endLine":69,"endColumn":15},{"ruleId":"228","severity":1,"message":"255","line":24,"column":3,"nodeType":"230","messageId":"231","endLine":24,"endColumn":8},{"ruleId":"256","severity":1,"message":"257","line":133,"column":14,"nodeType":"230","messageId":"258","endLine":133,"endColumn":15},{"ruleId":"256","severity":1,"message":"259","line":134,"column":11,"nodeType":"230","messageId":"258","endLine":134,"endColumn":20},{"ruleId":"256","severity":1,"message":"260","line":135,"column":11,"nodeType":"230","messageId":"258","endLine":135,"endColumn":15},{"ruleId":"261","severity":1,"message":"262","line":348,"column":7,"nodeType":"263","messageId":"264","endLine":361,"endColumn":8},{"ruleId":"248","severity":1,"message":"249","line":6,"column":3,"nodeType":"250","messageId":"251","endLine":8,"endColumn":4},{"ruleId":"228","severity":1,"message":"229","line":2,"column":8,"nodeType":"230","messageId":"231","endLine":2,"endColumn":16},{"ruleId":"228","severity":1,"message":"232","line":4,"column":3,"nodeType":"230","messageId":"231","endLine":4,"endColumn":12},{"ruleId":"228","severity":1,"message":"233","line":5,"column":3,"nodeType":"230","messageId":"231","endLine":5,"endColumn":9},{"ruleId":"228","severity":1,"message":"265","line":6,"column":3,"nodeType":"230","messageId":"231","endLine":6,"endColumn":7},{"ruleId":"228","severity":1,"message":"266","line":14,"column":3,"nodeType":"230","messageId":"231","endLine":14,"endColumn":10},{"ruleId":"228","severity":1,"message":"267","line":20,"column":7,"nodeType":"230","messageId":"231","endLine":20,"endColumn":26},{"ruleId":"240","severity":1,"message":"244","line":78,"column":57,"nodeType":"242","messageId":"243","endLine":78,"endColumn":59},{"ruleId":"228","severity":1,"message":"268","line":128,"column":11,"nodeType":"230","messageId":"231","endLine":128,"endColumn":15},{"ruleId":"248","severity":1,"message":"249","line":10,"column":3,"nodeType":"250","messageId":"251","endLine":12,"endColumn":4},{"ruleId":"228","severity":1,"message":"253","line":70,"column":7,"nodeType":"230","messageId":"231","endLine":70,"endColumn":13},{"ruleId":"228","severity":1,"message":"254","line":71,"column":7,"nodeType":"230","messageId":"231","endLine":71,"endColumn":13},{"ruleId":"228","severity":1,"message":"269","line":29,"column":10,"nodeType":"230","messageId":"231","endLine":29,"endColumn":32},{"ruleId":"228","severity":1,"message":"270","line":33,"column":10,"nodeType":"230","messageId":"231","endLine":33,"endColumn":30},"no-native-reassign",["271"],"no-negated-in-lhs",["272"],["271"],["272"],["271"],["272"],["271"],["272"],["271"],["272"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Header' is defined but never used.","'Dropdown' is defined but never used.","'TextArea' is defined but never used.","'Grid' is defined but never used.","'Segment' is defined but never used.","'Input' is defined but never used.","'checkInputMessagestyle' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'dispatch' is assigned a value but never used.","'scaleBand' is defined but never used.","'Dimmer' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'dotColor' is assigned a value but never used.","'xPoint' is assigned a value but never used.","'yPoint' is assigned a value but never used.","'Label' is defined but never used.","no-redeclare","'j' is already defined.","redeclared","'spotsBack' is already defined.","'time' is already defined.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Form' is defined but never used.","'Message' is defined but never used.","'requestMessageStyle' is assigned a value but never used.","'data' is assigned a value but never used.","'exportTalkgroupSuccess' is defined but never used.","'exportTalkgroupError' is defined but never used.","no-global-assign","no-unsafe-negation"]